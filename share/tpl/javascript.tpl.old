
dojo.provide('[% ns_prefix %].[% output_basename %]');
dojo.require('Xmldoom.Object');
//dojo.require('Xmldoom.Criteria');

//
// This file was automatically generated by xmldoom-generate 0.0.10 !
//

// we beat the bootstrap by being global
[% class_map %] = { };
[% conn_name %] = null;

//
// Go through every object and create an object
//

[%- FOREACH object = objects %]
dojo.provide('[% object.class_name %]');

[% object.class_name %] = function ()
{
	this._info = {
		[%- FOREACH attr = object.attributes %]
		'[% attr.name %]': [% attr.default %]
		[%- "," IF NOT loop.last %]
		[%- END %]
	};

	this._key = {
		[%- FOREACH key = object.keys_list %]
		'[% key.name %]': [% key.default %]
		[%- "," IF NOT loop.last %]
		[%- END %]
	};

	Xmldoom.Object.call(this, '[% object.name %]', arguments, [% ns_prefix %]);
};
[% class_map %]['[% object.name %]'] = [% object.class_name %];

[%- FOREACH prop = object.properties %]
[%- IF prop.type == "simple" %]
[% object.class_name %].prototype.[% prop.get_name %] = function()
{
	return this._info['[% prop.attr %]'];
}

[% object.class_name %].prototype.[% prop.set_name %] = function(value)
{
	this._info['[% prop.attr %]'] = value;
}
[%- ELSIF prop.type == 'object' %]
[% object.class_name %].prototype.[% prop.get_name %] = function(args)
{
	[%- IF prop.relationship == 'inherent' %]
	return [% prop.class_name %].load({
		[%- FOREACH conn = prop.obj_conns %]
		'[% conn.other %]': this._info['[% conn.self %]']
		[%- "," IF NOT loop.last %]
		[%- END %]
	});
	[%- ELSE %]
	// TODO: doesn't work without having proper information about the database
	// structure.
	/*
	var criteria = new Xmldoom.Criteria();
	for ( var key in args )
	{
		criteria.add('[% prop.object_name %]'+key, args[key]);
	}
	return [% prop.class_name %].Search(criteria);
	*/
	alert('[% object.class_name %].[% prop.get_name %](): unimplemented');
	[%- END %]
}

[% object.class_name %].prototype.[% prop.set_name %] = function(value)
{
	[%- IF prop.relationship == 'inherent' %]
	[%- FOREACH conn = prop.obj_conns %]
	this._info['[% conn.self %]'] = object._get_attr('[% conn.other %]');
	[%- END %]
	[%- ELSE %]
	// TODO: implement with a special call into the ORB. (OR- just by creating all the objects)
	alert('[% object.class_name %].[% prop.set_name %](): unimplemented');
	[%- END %]
}
[%- END %]
[% END -%]

[% object.class_name %].load = function (keys)
{
	return new [% object.class_name %]({
		data: [% conn_name %].load('[% object.name %]', keys)
	});
};

[% object.class_name %].Search = function (criteria, callback)
{
	return Xmldoom.Object.Search([% conn_name %], '[% object.name %]', [% object.class_name %], criteria, callback);
};
[% END %]

